name: wfax
on:
  repository_dispatch:
    types: [wf-assets-gl-cron]
  workflow_dispatch:
    inputs:
      version:
        description: Version
        default: '0.0.0'
        type: string
      full_extract:
        description: Full Extract
        default: true
        type: boolean

jobs:
  wfax:
    env:
      TMP_WORKDIR: /tmp/wfax-wd
      VERSION_FILE: VERSION
      VERSION: '0.0.0'
      DIFF_ONLY: --diff-only
      INDENT: '2'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set VERSION from file
      continue-on-error: true
      if: ${{ !inputs.version }}
      run: ls ${VERSION_FILE} >> /dev/null 2>&1 && echo VERSION=$(cat ${VERSION_FILE}) >> ${GITHUB_ENV}
    - name: Set VERSION from dispatch
      if: ${{ inputs.version }}
      run: echo VERSION=${{ inputs.version }} >> ${GITHUB_ENV}
    - name: Set DIFF_ONLY from dispatch
      if: ${{ inputs.full_extract }}
      run: echo DIFF_ONLY= >> ${GITHUB_ENV}
    - uses: dsaltares/fetch-gh-release-asset@1.1.0
      with:
        repo: blead/wfax
        version: latest
        regex: true
        file: wfax-.+-linux-amd64\.tar\.gz$
        target: .wfax/
    - name: Create tmp working directory
      run: |
        mkdir -p ${TMP_WORKDIR}
        mv .wfax/* ${TMP_WORKDIR}
        rm -rf .wfax
    - name: Untar wfax
      run: |
        tar -xvf wfax-*.tar.gz
        rm -f wfax-*.tar.gz
        chmod +x wfax
      working-directory: ${{env.TMP_WORKDIR}}
    - id: fetch
      name: Run wfax fetch
      continue-on-error: true
      run: ./wfax fetch dump --region gl --concurrency 50 --version ${VERSION} ${DIFF_ONLY} > ${GITHUB_WORKSPACE}/${VERSION_FILE}
      working-directory: ${{env.TMP_WORKDIR}}
    - name: Run wfax extract
      if: steps.fetch.outcome == 'success'
      run: ./wfax extract dump --concurrency 50 ${GITHUB_WORKSPACE} --indent ${INDENT}
      working-directory: ${{env.TMP_WORKDIR}}
    - name: Git commit
      if: steps.fetch.outcome == 'success'
      run: |
        git config user.name "wfax-bot"
        git config user.email "<>"
        git add .
        git commit -m "Automated extract v$(cat ${VERSION_FILE})"
        git tag "v$(cat ${VERSION_FILE})"
        git push origin master
        git push --tags --force origin
